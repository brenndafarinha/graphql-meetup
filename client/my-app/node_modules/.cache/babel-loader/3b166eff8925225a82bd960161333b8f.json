{"ast":null,"code":"var _jsxFileName = \"/home/farinha/Documents/graphql-meetup/client/my-app/src/Page.js\";\nimport React from 'react';\nimport { withApollo } from '@apollo/react-hoc';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport DogCard from \"./Components/DogCard\";\nimport { Spin } from 'antd';\nconst getDogsQuery = gql`\n  {\n    allUsers {\n      fullname\n      image\n      website\n    }\n  }\n`;\n\nfunction Page({\n  client\n}) {\n  const _useQuery = useQuery(getDogsQuery, {\n    client\n  }),\n        dogsData = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  console.log(dogsData);\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-around\",\n      width: \"80%\",\n      flexWrap: \"wrap\",\n      margin: \"60px auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, dogsData ? dogsData.allUsers.map((dog, idx) => React.createElement(DogCard, {\n    key: idx,\n    name: dog.fullname,\n    url: dog.website,\n    image: dog.image,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nexport default withApollo(Page);","map":{"version":3,"sources":["/home/farinha/Documents/graphql-meetup/client/my-app/src/Page.js"],"names":["React","withApollo","useQuery","gql","DogCard","Spin","getDogsQuery","Page","client","dogsData","data","loading","error","console","log","display","alignItems","justifyContent","width","flexWrap","margin","allUsers","map","dog","idx","fullname","website","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,IAAT,QAAqB,MAArB;AAIA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;CAAzB;;AAUA,SAASI,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA0B;AAAA,oBAMpBN,QAAQ,CAACI,YAAD,EAAe;AAAEE,IAAAA;AAAF,GAAf,CANY;AAAA,QAGhBC,QAHgB,aAGtBC,IAHsB;AAAA,QAItBC,OAJsB,aAItBA,OAJsB;AAAA,QAKtBC,KALsB,aAKtBA,KALsB;;AAQxBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAE,YAA9B;AAA4CC,MAAAA,cAAc,EAAE,cAA5D;AAA4EC,MAAAA,KAAK,EAAE,KAAnF;AAA0FC,MAAAA,QAAQ,EAAE,MAApG;AAA4GC,MAAAA,MAAM,EAAE;AAApH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QAAQ,GAAGA,QAAQ,CAACY,QAAT,CAAkBC,GAAlB,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,IAAI,EAAED,GAAG,CAACE,QAA7B;AAAuC,IAAA,GAAG,EAAEF,GAAG,CAACG,OAAhD;AAAyD,IAAA,KAAK,EAAEH,GAAG,CAACI,KAApE;AAA2E,IAAA,OAAO,EAAEhB,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,CAAH,GAA0I,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrJ,CADF;AAKD;;AAED,eAAeV,UAAU,CAACM,IAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { withApollo } from '@apollo/react-hoc'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport DogCard from \"./Components/DogCard\"\nimport { Spin } from 'antd'\n\n\n\nconst getDogsQuery = gql`\n  {\n    allUsers {\n      fullname\n      image\n      website\n    }\n  }\n`\n\nfunction Page({ client }) {\n\n  const {\n    data: dogsData,\n    loading,\n    error\n  } = useQuery(getDogsQuery, { client })\n\n  console.log(dogsData)\n\n  return (\n    <div style={{display: \"flex\", alignItems: \"flex-start\", justifyContent: \"space-around\", width: \"80%\", flexWrap: \"wrap\", margin: \"60px auto\"}}>\n      {dogsData ? dogsData.allUsers.map((dog, idx) => <DogCard key={idx} name={dog.fullname} url={dog.website} image={dog.image} loading={loading} />) : <Spin/>}\n    </div>\n  )\n}\n\nexport default withApollo(Page)\n"]},"metadata":{},"sourceType":"module"}