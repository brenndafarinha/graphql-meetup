{"ast":null,"code":"var _jsxFileName = \"/home/farinha/Documents/graphql-meetup/client/my-app/src/Page.js\";\nimport React from 'react';\nimport { withApollo } from '@apollo/react-hoc';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Spin } from 'antd';\nimport CharacterCard from './Components/CharacterCard';\nconst charactersQuery = gql`\n  {\n    characters {\n      initials\n      name\n      url\n    }\n  }\n`;\n\nfunction Page({\n  client\n}) {\n  const _useQuery = useQuery(charactersQuery, {\n    client\n  }),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  console.log(data);\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-around\",\n      width: \"80%\",\n      flexWrap: \"wrap\",\n      margin: \"60px auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, data ? data.characters.results.map((item, idx) => React.createElement(CharacterCard, {\n    key: idx,\n    name: item.name,\n    url: item.url,\n    initials: item.initials,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nexport default withApollo(Page);","map":{"version":3,"sources":["/home/farinha/Documents/graphql-meetup/client/my-app/src/Page.js"],"names":["React","withApollo","useQuery","gql","Spin","CharacterCard","charactersQuery","Page","client","data","loading","error","console","log","display","alignItems","justifyContent","width","flexWrap","margin","characters","results","map","item","idx","name","url","initials"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAIA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;CAA5B;;AAUA,SAASI,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA0B;AAAA,oBAMpBN,QAAQ,CAACI,eAAD,EAAkB;AAAEE,IAAAA;AAAF,GAAlB,CANY;AAAA,QAGtBC,IAHsB,aAGtBA,IAHsB;AAAA,QAItBC,OAJsB,aAItBA,OAJsB;AAAA,QAKtBC,KALsB,aAKtBA,KALsB;;AAQxBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,UAAU,EAAE,YAA9B;AAA4CC,MAAAA,cAAc,EAAE,cAA5D;AAA4EC,MAAAA,KAAK,EAAE,KAAnF;AAA0FC,MAAAA,QAAQ,EAAE,MAApG;AAA4GC,MAAAA,MAAM,EAAE;AAApH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,GAAGA,IAAI,CAACW,UAAL,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,KAAe,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,GAApB;AAAyB,IAAA,IAAI,EAAED,IAAI,CAACE,IAApC;AAA0C,IAAA,GAAG,EAAEF,IAAI,CAACG,GAApD;AAAyD,IAAA,QAAQ,EAAEH,IAAI,CAACI,QAAxE;AAAkF,IAAA,OAAO,EAAEjB,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,CAAH,GAAwJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/J,CADF;AAKD;;AAED,eAAeT,UAAU,CAACM,IAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { withApollo } from '@apollo/react-hoc'\nimport { useQuery } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { Spin } from 'antd'\nimport CharacterCard from './Components/CharacterCard'\n\n\n\nconst charactersQuery = gql`\n  {\n    characters {\n      initials\n      name\n      url\n    }\n  }\n`\n\nfunction Page({ client }) {\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(charactersQuery, { client })\n\n  console.log(data)\n\n  return (\n    <div style={{display: \"flex\", alignItems: \"flex-start\", justifyContent: \"space-around\", width: \"80%\", flexWrap: \"wrap\", margin: \"60px auto\"}}>\n      {data ? data.characters.results.map((item, idx) => <CharacterCard key={idx} name={item.name} url={item.url} initials={item.initials} loading={loading} />) : <Spin/>}\n    </div>\n  )\n}\n\nexport default withApollo(Page)\n"]},"metadata":{},"sourceType":"module"}